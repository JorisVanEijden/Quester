{
"quest info: ": {
"name": "M0C00Y14",
"questType": "Fighters Guild",
"membership": "NonMember",
"reputation": 0,
"delivery": "InPerson",
"childSafe": true,
"questId": 0,
"faction": "None",
"resourceId": 0,
"resourceFileName": "",
"hasDebugInfo": false
}
,"items: [0]": {
}
,"npcs: [1]": {
" 0: n_qgiver: Male (type QuestGiver)": {
"variable": "n_qgiver",
"gender": "Male",
"facePictureIndex": 0,
"npcType": "QuestGiver",
"npcTypeRaw": "21 [0x0015]",
"faction": "None",
"factionRaw": "0 [0x0000]",
"textRecordId1": 0,
"textRecordId2": 0,
"index": 0,
"null1": 0
}
}
,"locations: [1]": {
" 0: l_house: InCurrentTown None": {
"variable": "l_house",
"generalLocation": "InCurrentTown",
"locationType": -1,
"LocationType": "None",
"fineLocation": 0,
"knownLocation": "None",
"doorSelector": 0,
"textRecordId1": 0,
"textRecordId2": 0,
"index": 0,
"flags": "0 [0x00]",
"objPtr": 0,
"unknown1": "0 [0x0000]"
}
}
,"timers: [1]": {
" 0: t_2dung: Fixed 1.00:00:00": {
"variable": "t_2dung",
"type": "Fixed",
"typeRaw": "1 [0x01]",
"minimum": "1.00:00:00",
"maximum": "00:00:00",
"flags1": "1 [00000001]",
"flags2": "0 [00]",
"duration": 0,
"started": 0,
"index": 0
}
}
,"mobs: [1]": {
" 0: m_monster: 1 Rat": {
"variable": "m_monster",
"type": "Rat",
"count": 1,
"null1": 0,
"null2": 0,
"index": 0
}
}
,"opCodes: [13]": {
" 0:  >> StartTimer (t_2dung); When it expires: set s_0": {
"opCode": 12,
"argCount": 2,
"arguments:": {
"0: _": {
"type": "State",
"value": "-1",
"not": "False",
"index": "255",
"unknown1": "0 [0x00000000]"
},
"1: t_2dung": {
"type": "Timer",
"value": "0",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
" 1:  => AddLocationToMap (l_house)": {
"opCode": 19,
"argCount": 2,
"arguments:": {
"0: _": {
"type": "State",
"value": "-1",
"not": "False",
"index": "255",
"unknown1": "0 [0x00000000]"
},
"1: l_house": {
"type": "Location",
"value": "0",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
" 2:  => CreateLogEntry (1010, 0)": {
"opCode": 23,
"argCount": 3,
"arguments:": {
"0: _": {
"type": "State",
"value": "-1",
"not": "False",
"index": "255",
"unknown1": "0 [0x00000000]"
},
"1: 1010": {
"type": "Value",
"value": "1010",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
},
"2: 0": {
"type": "Value",
"value": "0",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
" 3:  => EnsureNpcLocation (l_house)": {
"opCode": 81,
"argCount": 3,
"arguments:": {
"0: _": {
"type": "State",
"value": "-1",
"not": "False",
"index": "255",
"unknown1": "0 [0x00000000]"
},
"1: l_house": {
"type": "Location",
"value": "0",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
},
"2: ": {
"type": "Npc",
"value": "-1",
"not": "False",
"index": "255",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
" 4:  >> WhenAtLocation (l_house): set s_4": {
"opCode": 43,
"argCount": 3,
"arguments:": {
"0: _": {
"type": "State",
"value": "-1",
"not": "False",
"index": "255",
"unknown1": "0 [0x00000000]"
},
"1: s_4": {
"type": "State",
"value": "4",
"not": "False",
"index": "4",
"unknown1": "0 [0x00000000]"
},
"2: l_house": {
"type": "Location",
"value": "0",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
" 5: s_0 => EndQuest ()": {
"opCode": 6,
"argCount": 1,
"arguments:": {
"0: s_0": {
"type": "State",
"value": "0",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
" 6:  >> IfMobsKilled (m_monster, 4): set s_1": {
"opCode": 2,
"argCount": 3,
"arguments:": {
"0: s_1": {
"type": "State",
"value": "1",
"not": "False",
"index": "1",
"unknown1": "0 [0x00000000]"
},
"1: m_monster": {
"type": "Mob",
"value": "0",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
},
"2: 4": {
"type": "Value",
"value": "4",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
" 7:  >> IfNpcClicked (n_qgiver): set s_2": {
"opCode": 28,
"argCount": 2,
"arguments:": {
"0: s_2": {
"type": "State",
"value": "2",
"not": "False",
"index": "2",
"unknown1": "0 [0x00000000]"
},
"1: n_qgiver": {
"type": "Npc",
"value": "0",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
" 8: s_2 => QuestSuccess ()": {
"opCode": 4,
"argCount": 5,
"arguments:": {
"0: s_2": {
"type": "State",
"value": "2",
"not": "False",
"index": "2",
"unknown1": "0 [0x00000000]"
},
"1: ": {
"type": "Item",
"value": "-1",
"not": "False",
"index": "255",
"unknown1": "0 [0x00000000]"
},
"2: ": {
"type": "Item",
"value": "-1",
"not": "False",
"index": "255",
"unknown1": "0 [0x00000000]"
},
"3: ": {
"type": "Item",
"value": "-1",
"not": "False",
"index": "255",
"unknown1": "0 [0x00000000]"
},
"4: ": {
"type": "Item",
"value": "-1",
"not": "False",
"index": "255",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
" 9: s_2 => EndQuest ()": {
"opCode": 6,
"argCount": 1,
"arguments:": {
"0: s_2": {
"type": "State",
"value": "2",
"not": "False",
"index": "2",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
"10:  >> If (s_2 and not s_1): set s_3": {
"opCode": 52,
"argCount": 5,
"arguments:": {
"0: s_3": {
"type": "State",
"value": "3",
"not": "False",
"index": "3",
"unknown1": "0 [0x00000000]"
},
"1: s_2": {
"type": "State",
"value": "2",
"not": "False",
"index": "2",
"unknown1": "0 [0x00000000]"
},
"2: not s_1": {
"type": "State",
"value": "1",
"not": "True",
"index": "1",
"unknown1": "0 [0x00000000]"
},
"3: ": {
"type": "State",
"value": "-2",
"not": "False",
"index": "254",
"unknown1": "0 [0x00000000]"
},
"4: ": {
"type": "State",
"value": "-2",
"not": "False",
"index": "254",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
"11: s_3 => Unset (s_2, s_3)": {
"opCode": 7,
"argCount": 5,
"arguments:": {
"0: s_3": {
"type": "State",
"value": "3",
"not": "False",
"index": "3",
"unknown1": "0 [0x00000000]"
},
"1: s_2": {
"type": "State",
"value": "2",
"not": "False",
"index": "2",
"unknown1": "0 [0x00000000]"
},
"2: s_3": {
"type": "State",
"value": "3",
"not": "False",
"index": "3",
"unknown1": "0 [0x00000000]"
},
"3: ": {
"type": "State",
"value": "-2",
"not": "False",
"index": "254",
"unknown1": "0 [0x00000000]"
},
"4: ": {
"type": "State",
"value": "-2",
"not": "False",
"index": "254",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
"12: s_4 => CreateFoe(m_monster, 5, 75%, 75)": {
"opCode": 9,
"argCount": 5,
"arguments:": {
"0: s_4": {
"type": "State",
"value": "4",
"not": "False",
"index": "4",
"unknown1": "0 [0x00000000]"
},
"1: m_monster": {
"type": "Mob",
"value": "0",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
},
"2: 5": {
"type": "Value",
"value": "5",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
},
"3: 75": {
"type": "Value",
"value": "75",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
},
"4: 7": {
"type": "Value",
"value": "7",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
}
}
,"states: [5]": {
" 0: s_2dung": {
"variable": "s_2dung",
"isGlobal": false,
"globalIndex": 0,
"index": 0
},
" 1: s_40000001": {
"variable": "s_40000001",
"isGlobal": false,
"globalIndex": 0,
"index": 1
},
" 2: s_40000002": {
"variable": "s_40000002",
"isGlobal": false,
"globalIndex": 0,
"index": 2
},
" 3: s_clearclick": {
"variable": "s_clearclick",
"isGlobal": false,
"globalIndex": 0,
"index": 3
},
" 4: s_40000004": {
"variable": "s_40000004",
"isGlobal": false,
"globalIndex": 0,
"index": 4
}
}
,"text records: [11]": {
"1000": [
"My name is _qgiver_. We only give jobs to guild members. However, from time to time there are jobs that are too menial for fighters of the guild to accept. I have one such job. If you take it, it will show that you really want to be on our good side. What do you say?"
],
"1001": [
"Obviously you have no love for the Fighter's Guild. I will make sure to tell them what you really think."
],
"1002": [
"Giant rats have infested _house_. There may be as many as half a dozen of them. Go there and kill them all and I'll see what strings I can pull on your behalf. I can only give you one day."
],
"1004": [
"Killing rats, even giant ones, doesn't take much skill. It does put you in favor with us though. Good work."
],
"1005": [
"Some idiot bought four barrels of cheese. Now he's got giant rats in his house."
],
"1006": [
"Some woman had to abandon her home. It was overrun with giant rats and she didn't have enough gold to pay the Fighters Guild to kill them."
],
"1007": [
"I heard the Fighters Guild sent some %ra over to kill the rats in that woman's home. They didn't even charge her for it."
],
"1008": [
"So you killed the rats. Don't get too full of yourself. They were only rats."
],
"1009": [
"You couldn't even take care of giant rats. You are hopeless %pcn."
],
"1010": [
"%qdt: The Fighters Guild of ___qgiver_ has offered to let me rid _house_ of a giant rat infestation. I have one day to get it done."
],
"1020": [
"Thats most of them. The Fighters Guild won't quibble over the rest."
]
}
}
