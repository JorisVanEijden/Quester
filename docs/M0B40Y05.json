{
"quest info: ": {
"name": "M0B40Y05",
"questType": "Fighters Guild",
"membership": "Member",
"reputation": 40,
"delivery": "InPerson",
"childSafe": true,
"questId": 0,
"faction": "None",
"resourceId": 0,
"resourceFileName": "",
"hasDebugInfo": false
}
,"items: [1]": {
" 0: i_gold: Random gold": {
"variable": "i_gold",
"rewardType": "Gold",
"category": "Random",
"itemId": 65535,
"textRecordId1": 0,
"textRecordId2": 0,
"index": 0,
"unknown1": "0 [0x00000000]"
}
}
,"npcs: [2]": {
" 0: n_qgiver: Male (type QuestGiver)": {
"variable": "n_qgiver",
"gender": "Male",
"facePictureIndex": 0,
"npcType": "QuestGiver",
"npcTypeRaw": "21 [0x0015]",
"faction": "None",
"factionRaw": "0 [0x0000]",
"textRecordId1": 0,
"textRecordId2": 0,
"index": 0,
"null1": 0
},
" 1: n_woodsman: Female (type Resident2) (face 168)": {
"variable": "n_woodsman",
"gender": "Female",
"facePictureIndex": 168,
"npcType": "Resident2",
"npcTypeRaw": "18 [0x0012]",
"faction": "None",
"factionRaw": "0 [0x0000]",
"textRecordId1": 0,
"textRecordId2": 0,
"index": 1,
"null1": 0
}
}
,"locations: [3]": {
" 0: l_dungeon: OutOfTown 499": {
"variable": "l_dungeon",
"generalLocation": "OutOfTown",
"locationType": -1,
"LocationType": "499",
"fineLocation": 1,
"knownLocation": "None",
"doorSelector": 0,
"textRecordId1": 0,
"textRecordId2": 0,
"index": 0,
"flags": "0 [0x00]",
"objPtr": 0,
"unknown1": "0 [0x0000]"
},
" 1: l_qgenemy: OutOfTown 499": {
"variable": "l_qgenemy",
"generalLocation": "OutOfTown",
"locationType": -1,
"LocationType": "499",
"fineLocation": 1,
"knownLocation": "None",
"doorSelector": 0,
"textRecordId1": 0,
"textRecordId2": 0,
"index": 1,
"flags": "0 [0x00]",
"objPtr": 0,
"unknown1": "0 [0x0000]"
},
" 2: l_house: OutOfTown House1": {
"variable": "l_house",
"generalLocation": "OutOfTown",
"locationType": 17,
"LocationType": "House1",
"fineLocation": 0,
"knownLocation": "None",
"doorSelector": 0,
"textRecordId1": 0,
"textRecordId2": 0,
"index": 2,
"flags": "0 [0x00]",
"objPtr": 0,
"unknown1": "0 [0x0000]"
}
}
,"timers: [1]": {
" 0: t_2dung: 1.5 times travel time between here and 'l_dungeon'": {
"variable": "t_2dung",
"type": "Relative1",
"typeRaw": "2 [0x02]",
"minimum": "00:00:00",
"maximum": "00:00:00",
"flags1": "17 [00010001]",
"flags2": "0 [00]",
"duration": 0,
"started": 0,
"index": 0
}
}
,"mobs: [1]": {
" 0: m_monster: 1 Spriggan": {
"variable": "m_monster",
"type": "Spriggan",
"count": 1,
"null1": 0,
"null2": 0,
"index": 0
}
}
,"opCodes: [30]": {
" 0:  => RemoveTopics (l_house, n_woodsman)": {
"opCode": 11,
"argCount": 4,
"arguments:": {
"0: _": {
"type": "State",
"value": "-1",
"not": "False",
"index": "255",
"unknown1": "0 [0x00000000]"
},
"1: l_house": {
"type": "Location",
"value": "2",
"not": "False",
"index": "2",
"unknown1": "0 [0x00000000]"
},
"2: n_woodsman": {
"type": "Npc",
"value": "1",
"not": "False",
"index": "1",
"unknown1": "0 [0x00000000]"
},
"3: ": {
"type": "Item",
"value": "-1",
"not": "False",
"index": "255",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
" 1:  >> StartTimer (t_2dung); When it expires: set s_0": {
"opCode": 12,
"argCount": 2,
"arguments:": {
"0: _": {
"type": "State",
"value": "-1",
"not": "False",
"index": "255",
"unknown1": "0 [0x00000000]"
},
"1: t_2dung": {
"type": "Timer",
"value": "0",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
" 2:  => AddLocationToMap (l_dungeon)": {
"opCode": 19,
"argCount": 2,
"arguments:": {
"0: _": {
"type": "State",
"value": "-1",
"not": "False",
"index": "255",
"unknown1": "0 [0x00000000]"
},
"1: l_dungeon": {
"type": "Location",
"value": "0",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
" 3:  => CreateLogEntry (1010, 0)": {
"opCode": 23,
"argCount": 3,
"arguments:": {
"0: _": {
"type": "State",
"value": "-1",
"not": "False",
"index": "255",
"unknown1": "0 [0x00000000]"
},
"1: 1010": {
"type": "Value",
"value": "1010",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
},
"2: 0": {
"type": "Value",
"value": "0",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
" 4:  => PickOneOf (s_map, s_nomap, s_nomap, s_map)": {
"opCode": 34,
"argCount": 5,
"arguments:": {
"0: _": {
"type": "State",
"value": "-1",
"not": "False",
"index": "255",
"unknown1": "0 [0x00000000]"
},
"1: s_map": {
"type": "State",
"value": "9",
"not": "False",
"index": "9",
"unknown1": "0 [0x00000000]"
},
"2: s_nomap": {
"type": "State",
"value": "10",
"not": "False",
"index": "10",
"unknown1": "0 [0x00000000]"
},
"3: s_nomap": {
"type": "State",
"value": "10",
"not": "False",
"index": "10",
"unknown1": "0 [0x00000000]"
},
"4: s_map": {
"type": "State",
"value": "9",
"not": "False",
"index": "9",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
" 5:  => PlaceMobAtLocation (m_monster, l_dungeon)": {
"opCode": 22,
"argCount": 3,
"arguments:": {
"0: _": {
"type": "State",
"value": "-1",
"not": "False",
"index": "255",
"unknown1": "0 [0x00000000]"
},
"1: m_monster": {
"type": "Mob",
"value": "0",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
},
"2: l_dungeon": {
"type": "Location",
"value": "0",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
" 6: s_2dung => EndQuest ()": {
"opCode": 6,
"argCount": 1,
"arguments:": {
"0: s_2dung": {
"type": "State",
"value": "0",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
" 7:  >> IfMobsKilled (m_monster, 1): set s_1 [Msg 1011]": {
"opCode": 2,
"argCount": 3,
"arguments:": {
"0: s_1": {
"type": "State",
"value": "1",
"not": "False",
"index": "1",
"unknown1": "0 [0x00000000]"
},
"1: m_monster": {
"type": "Mob",
"value": "0",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
},
"2: 1": {
"type": "Value",
"value": "1",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
}
},
"messageId": 1011,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
" 8:  >> IfNpcClicked (n_qgiver): set s_2": {
"opCode": 28,
"argCount": 2,
"arguments:": {
"0: s_2": {
"type": "State",
"value": "2",
"not": "False",
"index": "2",
"unknown1": "0 [0x00000000]"
},
"1: n_qgiver": {
"type": "Npc",
"value": "0",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
" 9: s_2 => QuestSuccess (i_gold)": {
"opCode": 4,
"argCount": 5,
"arguments:": {
"0: s_2": {
"type": "State",
"value": "2",
"not": "False",
"index": "2",
"unknown1": "0 [0x00000000]"
},
"1: i_gold": {
"type": "Item",
"value": "0",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
},
"2: ": {
"type": "Item",
"value": "-1",
"not": "False",
"index": "255",
"unknown1": "0 [0x00000000]"
},
"3: ": {
"type": "Item",
"value": "-1",
"not": "False",
"index": "255",
"unknown1": "0 [0x00000000]"
},
"4: ": {
"type": "Item",
"value": "-1",
"not": "False",
"index": "255",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
"10: s_2 => Say (1003)": {
"opCode": 51,
"argCount": 1,
"arguments:": {
"0: s_2": {
"type": "State",
"value": "2",
"not": "False",
"index": "2",
"unknown1": "0 [0x00000000]"
}
},
"messageId": 1003,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
"11: s_2 => EndQuest ()": {
"opCode": 6,
"argCount": 1,
"arguments:": {
"0: s_2": {
"type": "State",
"value": "2",
"not": "False",
"index": "2",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
"12:  >> If (s_2 and not s_1 and not s_7): set s_clearclick": {
"opCode": 52,
"argCount": 5,
"arguments:": {
"0: s_clearclick": {
"type": "State",
"value": "3",
"not": "False",
"index": "3",
"unknown1": "0 [0x00000000]"
},
"1: s_2": {
"type": "State",
"value": "2",
"not": "False",
"index": "2",
"unknown1": "0 [0x00000000]"
},
"2: not s_1": {
"type": "State",
"value": "1",
"not": "True",
"index": "1",
"unknown1": "0 [0x00000000]"
},
"3: not s_7": {
"type": "State",
"value": "7",
"not": "True",
"index": "7",
"unknown1": "0 [0x00000000]"
},
"4: ": {
"type": "State",
"value": "-2",
"not": "False",
"index": "254",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
"13: s_clearclick => Unset (s_2, s_clearclick)": {
"opCode": 7,
"argCount": 5,
"arguments:": {
"0: s_clearclick": {
"type": "State",
"value": "3",
"not": "False",
"index": "3",
"unknown1": "0 [0x00000000]"
},
"1: s_2": {
"type": "State",
"value": "2",
"not": "False",
"index": "2",
"unknown1": "0 [0x00000000]"
},
"2: s_clearclick": {
"type": "State",
"value": "3",
"not": "False",
"index": "3",
"unknown1": "0 [0x00000000]"
},
"3: ": {
"type": "State",
"value": "-2",
"not": "False",
"index": "254",
"unknown1": "0 [0x00000000]"
},
"4: ": {
"type": "State",
"value": "-2",
"not": "False",
"index": "254",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
"14:  >> IfMobHurtByPlayer (m_monster): set s_4": {
"opCode": 21,
"argCount": 2,
"arguments:": {
"0: s_4": {
"type": "State",
"value": "4",
"not": "False",
"index": "4",
"unknown1": "0 [0x00000000]"
},
"1: m_monster": {
"type": "Mob",
"value": "0",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
"15: s_4 => PromptYesNo (s_yes, s_no, 1020)": {
"opCode": 29,
"argCount": 4,
"arguments:": {
"0: s_4": {
"type": "State",
"value": "4",
"not": "False",
"index": "4",
"unknown1": "0 [0x00000000]"
},
"1: s_yes": {
"type": "State",
"value": "5",
"not": "False",
"index": "5",
"unknown1": "0 [0x00000000]"
},
"2: s_no": {
"type": "State",
"value": "6",
"not": "False",
"index": "6",
"unknown1": "0 [0x00000000]"
},
"3: 1020": {
"type": "Value",
"value": "1020",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
"16: s_yes => AddTopics (n_woodsman)": {
"opCode": 10,
"argCount": 4,
"arguments:": {
"0: s_yes": {
"type": "State",
"value": "5",
"not": "False",
"index": "5",
"unknown1": "0 [0x00000000]"
},
"1: ": {
"type": "Location",
"value": "-1",
"not": "False",
"index": "255",
"unknown1": "0 [0x00000000]"
},
"2: n_woodsman": {
"type": "Npc",
"value": "1",
"not": "False",
"index": "1",
"unknown1": "0 [0x00000000]"
},
"3: ": {
"type": "Item",
"value": "-1",
"not": "False",
"index": "255",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
"17: s_yes => CreateLogEntry (1030, 1)": {
"opCode": 23,
"argCount": 3,
"arguments:": {
"0: s_yes": {
"type": "State",
"value": "5",
"not": "False",
"index": "5",
"unknown1": "0 [0x00000000]"
},
"1: 1030": {
"type": "Value",
"value": "1030",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
},
"2: 1": {
"type": "Value",
"value": "1",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
"18: s_yes => Say (1021)": {
"opCode": 51,
"argCount": 1,
"arguments:": {
"0: s_yes": {
"type": "State",
"value": "5",
"not": "False",
"index": "5",
"unknown1": "0 [0x00000000]"
}
},
"messageId": 1021,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
"19: s_yes => DoneWithMob (m_monster, _)": {
"opCode": 68,
"argCount": 3,
"arguments:": {
"0: s_yes": {
"type": "State",
"value": "5",
"not": "False",
"index": "5",
"unknown1": "0 [0x00000000]"
},
"1: m_monster": {
"type": "Mob",
"value": "0",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
},
"2: _": {
"type": "State",
"value": "-1",
"not": "False",
"index": "255",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
"20: s_yes => EnsureNpcLocation (l_house)": {
"opCode": 81,
"argCount": 3,
"arguments:": {
"0: s_yes": {
"type": "State",
"value": "5",
"not": "False",
"index": "5",
"unknown1": "0 [0x00000000]"
},
"1: l_house": {
"type": "Location",
"value": "2",
"not": "False",
"index": "2",
"unknown1": "0 [0x00000000]"
},
"2: ": {
"type": "Npc",
"value": "-1",
"not": "False",
"index": "255",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
"21: s_yes => PlaceNpcAt (n_woodsman, l_house)": {
"opCode": 30,
"argCount": 3,
"arguments:": {
"0: s_yes": {
"type": "State",
"value": "5",
"not": "False",
"index": "5",
"unknown1": "0 [0x00000000]"
},
"1: n_woodsman": {
"type": "Npc",
"value": "1",
"not": "False",
"index": "1",
"unknown1": "0 [0x00000000]"
},
"2: l_house": {
"type": "Location",
"value": "2",
"not": "False",
"index": "2",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
"22: s_no => Say (1022)": {
"opCode": 51,
"argCount": 1,
"arguments:": {
"0: s_no": {
"type": "State",
"value": "6",
"not": "False",
"index": "6",
"unknown1": "0 [0x00000000]"
}
},
"messageId": 1022,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
"23:  >> IfNpcClicked (n_woodsman): set s_7 [Msg 1023]": {
"opCode": 28,
"argCount": 2,
"arguments:": {
"0: s_7": {
"type": "State",
"value": "7",
"not": "False",
"index": "7",
"unknown1": "0 [0x00000000]"
},
"1: n_woodsman": {
"type": "Npc",
"value": "1",
"not": "False",
"index": "1",
"unknown1": "0 [0x00000000]"
}
},
"messageId": 1023,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
"24: s_7 => AdjustReputationWithNpc (n_woodsman, 10)": {
"opCode": 61,
"argCount": 3,
"arguments:": {
"0: s_7": {
"type": "State",
"value": "7",
"not": "False",
"index": "7",
"unknown1": "0 [0x00000000]"
},
"1: n_woodsman": {
"type": "Npc",
"value": "1",
"not": "False",
"index": "1",
"unknown1": "0 [0x00000000]"
},
"2: 10": {
"type": "Value",
"value": "10",
"not": "False",
"index": "0",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
"25:  >> If (s_2 and s_7): set s_8": {
"opCode": 52,
"argCount": 5,
"arguments:": {
"0: s_8": {
"type": "State",
"value": "8",
"not": "False",
"index": "8",
"unknown1": "0 [0x00000000]"
},
"1: s_2": {
"type": "State",
"value": "2",
"not": "False",
"index": "2",
"unknown1": "0 [0x00000000]"
},
"2: s_7": {
"type": "State",
"value": "7",
"not": "False",
"index": "7",
"unknown1": "0 [0x00000000]"
},
"3: ": {
"type": "State",
"value": "-2",
"not": "False",
"index": "254",
"unknown1": "0 [0x00000000]"
},
"4: ": {
"type": "State",
"value": "-2",
"not": "False",
"index": "254",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
"26: s_8 => Say (1025)": {
"opCode": 51,
"argCount": 1,
"arguments:": {
"0: s_8": {
"type": "State",
"value": "8",
"not": "False",
"index": "8",
"unknown1": "0 [0x00000000]"
}
},
"messageId": 1025,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
"27: s_8 => Unset (s_2)": {
"opCode": 7,
"argCount": 5,
"arguments:": {
"0: s_8": {
"type": "State",
"value": "8",
"not": "False",
"index": "8",
"unknown1": "0 [0x00000000]"
},
"1: s_2": {
"type": "State",
"value": "2",
"not": "False",
"index": "2",
"unknown1": "0 [0x00000000]"
},
"2: ": {
"type": "State",
"value": "-2",
"not": "False",
"index": "254",
"unknown1": "0 [0x00000000]"
},
"3: ": {
"type": "State",
"value": "-2",
"not": "False",
"index": "254",
"unknown1": "0 [0x00000000]"
},
"4: ": {
"type": "State",
"value": "-2",
"not": "False",
"index": "254",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
"28:  >> If (s_map and s_2): set s_11": {
"opCode": 52,
"argCount": 5,
"arguments:": {
"0: s_11": {
"type": "State",
"value": "11",
"not": "False",
"index": "11",
"unknown1": "0 [0x00000000]"
},
"1: s_map": {
"type": "State",
"value": "9",
"not": "False",
"index": "9",
"unknown1": "0 [0x00000000]"
},
"2: s_2": {
"type": "State",
"value": "2",
"not": "False",
"index": "2",
"unknown1": "0 [0x00000000]"
},
"3: ": {
"type": "State",
"value": "-2",
"not": "False",
"index": "254",
"unknown1": "0 [0x00000000]"
},
"4: ": {
"type": "State",
"value": "-2",
"not": "False",
"index": "254",
"unknown1": "0 [0x00000000]"
}
},
"messageId": -1,
"flags": "0 [0x0000]",
"lastUpdate": 0
},
"29: s_11 => AddLocationToMap (l_qgenemy) [Msg 1080]": {
"opCode": 19,
"argCount": 2,
"arguments:": {
"0: s_11": {
"type": "State",
"value": "11",
"not": "False",
"index": "11",
"unknown1": "0 [0x00000000]"
},
"1: l_qgenemy": {
"type": "Location",
"value": "1",
"not": "False",
"index": "1",
"unknown1": "0 [0x00000000]"
}
},
"messageId": 1080,
"flags": "0 [0x0000]",
"lastUpdate": 0
}
}
,"states: [12]": {
" 0: s_2dung": {
"variable": "s_2dung",
"isGlobal": false,
"globalIndex": 0,
"index": 0
},
" 1: s_40000001": {
"variable": "s_40000001",
"isGlobal": false,
"globalIndex": 0,
"index": 1
},
" 2: s_40000002": {
"variable": "s_40000002",
"isGlobal": false,
"globalIndex": 0,
"index": 2
},
" 3: s_clearclick": {
"variable": "s_clearclick",
"isGlobal": false,
"globalIndex": 0,
"index": 3
},
" 4: s_40000004": {
"variable": "s_40000004",
"isGlobal": false,
"globalIndex": 0,
"index": 4
},
" 5: s_yes": {
"variable": "s_yes",
"isGlobal": false,
"globalIndex": 0,
"index": 5
},
" 6: s_no": {
"variable": "s_no",
"isGlobal": false,
"globalIndex": 0,
"index": 6
},
" 7: s_40000007": {
"variable": "s_40000007",
"isGlobal": false,
"globalIndex": 0,
"index": 7
},
" 8: s_40000008": {
"variable": "s_40000008",
"isGlobal": false,
"globalIndex": 0,
"index": 8
},
" 9: s_map": {
"variable": "s_map",
"isGlobal": false,
"globalIndex": 0,
"index": 9
},
"10: s_nomap": {
"variable": "s_nomap",
"isGlobal": false,
"globalIndex": 0,
"index": 10
},
"11: s_4000000b": {
"variable": "s_4000000b",
"isGlobal": false,
"globalIndex": 0,
"index": 11
}
}
,"text records: [19]": {
"1000": [
"Some woodsmen have hired the guild to kill a spriggan. Seems the monster is attacking them when they are out in the woods logging. Want to take a hack at it %pcn?"
],
"1001": [
"Fair enough. Run along. I've got to find someone to take this job."
],
"1002": [
"Two attempted ambushes have failed. The spriggan is just too smart. You'll have to go to its lair, in ___dungeon_. Get back to me within =2dung_ days and I'll have _gold_ gold waiting for you."
],
"1003": [
"The spriggan is kindling? You are proving yourself to be quite reliable, %pct."
],
"1004": [
"Here is your _gold_ gold as promised."
],
"1005": [
"I hear _woodsman_ is stirring up the woodsmen against the spriggans. Funny. I've never known the spriggans to cause us trouble before."
],
"1006": [
"Another woodsmen died. I hear it was _woodsman_. The rest of them have decided to log elsewhere."
],
"1007": [
"I haven't heard about that spriggan lately. Must have left the area."
],
"1008": [
"Well done work with that spriggan."
],
"1009": [
"Spriggans aren't so tough. What happened? You get scared and hid?"
],
"1010": [
"On %qdt, The Fighters Guild of ___qgiver_ hired me to kill a spriggan that is molesting woodsmen. It's hiding in ___dungeon_. I was given =2dung_ days to get the job done."
],
"1011": [
"The spriggan is dead. Those woodsmen can log in safety now."
],
"1020": [
"You attack me without cause, %ra. Yes I did wreak vengence upon the slayers of wood. Know that they did slay seedlings of mine. Would you stand rooted while someone slew your seedlings? I have no quarrel with you. Convince the woodsmen to prune with care, and I shall leave them in peace. Will you take this mission up?"
],
"1021": [
"The main culprit is _woodsman_, who hacks down trees without care. Go to ___house_ and secure his promise. Do not visit me again. I shall know of your success or failure by how the woodsman do their work."
],
"1022": [
"I should have known better than to trust a creature of flesh. Now I shall give you no quarter."
],
"1023": [
"So the tree creature wants to cut a deal, eh? Well I suppose I can convince the boys to only log the big trees. But if his kind attack us again, we'll burn every sapling we can find! You've got yourself a deal, %pcn."
],
"1025": [
"You worked it so the woodsmen and the spriggan ain't fightin'? Very clever %pcn. You'll go far if you keep those wits sharp."
],
"1030": [
"%qdt: The spriggan has convinced me that it is not the villian. Apparently a woodsman named _woodsman_ in ___house_ has been cutting down its trees. If I can get _woodsman_ to agree to log the forest more carefully, this whole thing can be settled without bloodshed."
],
"1080": [
"By the way, since I'm feelin' charitable, here's a map to a hole called ___newdung_. Full of monsters needin' killing, treasure to loot, the works.  Have fun."
]
}
}
